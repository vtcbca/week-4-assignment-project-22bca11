1. Contact management system using sqlite3 and python using user define function.

import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("""create table if not exists contact
               ( cid int primary key,
                 fname text,
                 lname text,
                 contact number,
                 email text,
                 city text
                 check ( email like '%_@_%._%')
                );""")
con.commit()
con.close()

2. CREATING A LOG TABLE

import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("""create table if not exists details_log
                (
                    
                    fname text,
                    lname text,
                    newcontact number,
                    oldcontact number,
                    datetime text,
                    operation text
                    
                )""")
con.commit()
con.close()


3. INSERT LOG TRIGGER


import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("""create trigger if not exists insertdata
               after insert on contact
               begin
                   insert into details_log
                   values(new.fname,new.lname,new.contact,'NULL',datetime('now'),'insert');
               end;
                   """)
con.commit()
con.close()


4. DELETE LOG TRIGGER


import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("""create trigger if not exists deletedata
               after delete on contact
               begin
                   insert into details_log
                   values(old.fname,old.lname,'NULL',old.contact,datetime('now'),'delete');
               end;
                   """)
con.commit()
con.close()


5. UPDATE LOG TRIGGER

import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("""create trigger if not exists updatedata
               after update on contact
               begin
                   insert into details_log
                   values(new.fname,new.lname,new.contact,old.contact,datetime('now'),'update');
               end;
                   """)
con.commit()
con.close()


6. MAINTAINING LOG TABLE AFTER OPERATION


import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
def updaterecord(cd):
    newcon=int(input("Enter New Number:"))
    cur.execute(f"Update contact set contact={newcon} where cid={cd};")
def deleterecord(cd):
    cur.execute(f"delete from contact where cid={cd}")
def searchrecord(cd):
    cur.execute(f"select * from contact where cid={cd}")
    row=cur.fetchall()
    print(row)
cur.execute("""insert into contact values
                (1,'dhruv','chaudhari',1111111111,'dc@gmail.com','vyara'),
                (2,'sita','ram',2222222222,'sr@gmail.com','bardoli'),
                (3,'radha','krishna',3333333333,'rk@gmail.com','surat'),
                (4,'pavan','hanuman',4444444444,'ph@gmail.com','surat'),
                (5,'om','sai',5555555555,'os@gmail.com','vyara');""")
con.commit()
con.close()


7. DISPLAYING RECORDS OF TABLE

import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("select * from contact")
row=cur.fetchall()
for i in row:
    print(i)
con.commit()
con.close()


8. DISPLAYING RECORDS IN LOG TABLE

import sqlite3 as sq
import datetime
con = sq.connect("contactmanagementsystem.db")
cur = con.cursor()
cur.execute("select * from details_log")
row=cur.fetchall()
for i in row:
    print(i)
con.commit()
con.close()





